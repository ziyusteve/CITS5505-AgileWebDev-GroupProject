---
description: 
globs: 
alwaysApply: false
---
# Flask Application Architecture

This project uses Flask blueprints for a modular structure design.

## Application Initialization

- [app/__init__.py](mdc:app/__init__.py) contains the `create_app` factory function, responsible for:
  - Creating the Flask application instance
  - Loading configuration
  - Initializing extensions (such as database)
  - Registering blueprints
  - Setting up logging

## Configuration Management

- [app/config.py](mdc:app/config.py) defines configuration classes for different environments:
  - `Config` - Base configuration
  - `DevelopmentConfig` - Development environment
  - `TestingConfig` - Testing environment
  - `ProductionConfig` - Production environment

## Database Models

The database uses SQLAlchemy ORM, with primary models including:
- [User](mdc:app/models/user.py) - User information
- [Dataset](mdc:app/models/dataset.py) - Dataset metadata
- [Share](mdc:app/models/share.py) - Dataset sharing permissions

## Template Structure

- `app/templates/base.html` - Base template
- Templates for each functional module are stored in their corresponding subdirectories


